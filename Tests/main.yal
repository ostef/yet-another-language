//import "Math";

var a := 10;
//var a := "redeclared";
var b := "Hello World";

proc Main (args : []string)
{
    proc ProcInsideProc (a : int, b : string) -> (float, ok : bool)
    {
        var c := 10.0;
        //undeclared;

        return 10.0, 1;
        return 10.0, true;
    }

    {
        defer index = 10;

        const Index := 9;
        var index := -10;

        const Negated := !Index;
        const Boolean := !true;

        const Foo : int = Index;
        //Index[1] = 2;
        const const_array : [10]int = "";
        var array : [10]int;
        const const_value := array[index];
        var value := array[Index];
        var value1 := array[-Index];
        var value2 := array[array[Index]];
        array[index] = 10;
    }

    {
        var addressable := 10;
        var ptr := &addressable;
        *ptr = 11;

        ptr = &10;
        ptr = &addressable;
    }

    {
        var non_ptr : int;
        *non_ptr;

        var ptr : *void;
        *ptr;
        *ptr = 10;

        var int_ptr : *int;
        *int_ptr = 10;
    }

    {
        var foo : int;
        foo += 10;

        var bar := "Hello";
        bar -= "100";

        var baz : u64;
        baz -= baz;
    }

    {
        var value : int;
        var inversed := ^value;

        var non_int : string;
        ^non_int;
    }

    {
        const Ptr := null;
        *Ptr;
    }

    {
        const A := true;
        const B := true;
        const C := A && B;

        if "Hello Sailor!" {}

        if A <= B
        {
        }

        var equals := A == B;
    }

    {
        1 + 2;
        var unsigned : u64;
        var bad := -unsigned;
        bad = unsigned - unsigned;
    }

    {
        1 & 2; // == 0
        1 & 3; // == 1
        1 | 2; // == 3
        "Hello" & "Sailor";
        1.0 & 2.0;
    }

    {
        1 >> 2;
        1 >> -2;
        1 << 2;
        1 << -2;
    }

    {
        const Length := "Hello Sailor!".count; // Should be 13
        var array : []int;
        var data := array.data;
        array.allocator;

        var dyn_array : [..]int;
        data = array.data;
        dyn_array.allocator;
        dyn_array.capacity;
        dyn_array.count;

        var static_array : [112][10]int;
        const Count := static_array.count;

        static_array[10].count;
    }

    return;
}
